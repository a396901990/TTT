package com.dean.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.dean.greendao.RouteAttention;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table ROUTE_ATTENTION.
*/
public class RouteAttentionDao extends AbstractDao<RouteAttention, Long> {

    public static final String TABLENAME = "ROUTE_ATTENTION";

    /**
     * Properties of entity RouteAttention.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Route = new Property(1, String.class, "route", false, "ROUTE");
        public final static Property Type = new Property(2, String.class, "type", false, "TYPE");
        public final static Property Attention_title = new Property(3, String.class, "attention_title", false, "ATTENTION_TITLE");
        public final static Property Attention_detail = new Property(4, String.class, "attention_detail", false, "ATTENTION_DETAIL");
    };


    public RouteAttentionDao(DaoConfig config) {
        super(config);
    }
    
    public RouteAttentionDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'ROUTE_ATTENTION' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'ROUTE' TEXT NOT NULL ," + // 1: route
                "'TYPE' TEXT NOT NULL ," + // 2: type
                "'ATTENTION_TITLE' TEXT NOT NULL ," + // 3: attention_title
                "'ATTENTION_DETAIL' TEXT NOT NULL );"); // 4: attention_detail
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'ROUTE_ATTENTION'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, RouteAttention entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getRoute());
        stmt.bindString(3, entity.getType());
        stmt.bindString(4, entity.getAttention_title());
        stmt.bindString(5, entity.getAttention_detail());
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public RouteAttention readEntity(Cursor cursor, int offset) {
        RouteAttention entity = new RouteAttention( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // route
            cursor.getString(offset + 2), // type
            cursor.getString(offset + 3), // attention_title
            cursor.getString(offset + 4) // attention_detail
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, RouteAttention entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setRoute(cursor.getString(offset + 1));
        entity.setType(cursor.getString(offset + 2));
        entity.setAttention_title(cursor.getString(offset + 3));
        entity.setAttention_detail(cursor.getString(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(RouteAttention entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(RouteAttention entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
